version: 2
jobs:
  test:
    docker:
      - image: circleci/python:3.7
    environment:
      - TOXENV: py37
    working_directory: ~/covid-api
    steps:
      - checkout
      - run:
          name: install dependencies
          command: pip install tox codecov pre-commit --user
      - run:
          name: test
          command: ~/.local/bin/tox
          environment:
            AWS_DEFAULT_REGION: us-east-1
            AWS_ACCESS_KEY_ID: testing
            AWS_SECRET_ACCESS_KEY: testing
            AWS_SECURITY_TOKEN: testing
            AWS_SESSION_TOKEN: testing
      - run:
          name: run pre-commit
          command: ~/.local/bin/pre-commit run --all-files

  deploy:
    docker:
      - image: nikolaik/python-nodejs:python3.7-nodejs12
    working_directory: ~/covid-api
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: install dependencies
          command: |
            pip install -e .["deploy"] --user
            npm install -g cdk

      - run:
          name: install docker-ce-cli
          command: |
            apt-get update
            apt-get install apt-transport-https \
              ca-certificates curl gnupg2 software-properties-common -y
            curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
            add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian buster stable"
            apt-get update
            apt-get install docker-ce-cli -y

      - run:
          name: create lambda package
          command: |
            docker build . -t lambda:latest -f Dockerfiles/lambda/Dockerfile
            docker run --name lambda lambda:latest echo "container up"
            docker cp lambda:/tmp/package.zip package.zip
            docker stop lambda

      - deploy:
          name: master branch deployed to cdk stack
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              STAGE='prod' cdk deploy covid-api-lambda-prod --region us-east-1 --require-approval never
            fi

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master